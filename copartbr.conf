# Nginx server for www.copartbr.com.br
# Serves the mirrored static site and falls back to proxying dynamic API calls to the original domain.

server {
  listen 80;
  server_name copartbr.com.br www.copartbr.com.br;

  # Site root (not heavily used because we rely on aliases + try_files)
  root /usr/share/nginx/html;

  # --- Logging (optional) ---
  access_log /var/log/nginx/copartbr_access.log;
  error_log  /var/log/nginx/copartbr_error.log warn;

  # --- Static assets ---
  # Mirrors from: copart_clone/static/ -> /static/
  location /static/ {
    alias /usr/share/nginx/html/static/;
    access_log off;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000";
    try_files $uri =404;
  }

  # API manifest and captured JSONs
  # Mirrors from: copart_clone/static/copart/api/
  location /static/copart/api/ {
    alias /usr/share/nginx/html/static/copart/api/;
    add_header Access-Control-Allow-Origin "*" always;
    add_header Cache-Control "no-store";
    default_type application/json;
    try_files $uri =404;
  }

  # --- HTML pages (mirrored) ---
  # Mirrors from: copart_clone/templates/copart/
  # The scraper wrote all pages as plain HTML files under that folder.
  # We try in this order:
  #   1) literal file/dir
  #   2) templates/copart$uri.html
  #   3) templates/copart$uri/index.html
  #   4) templates/copart/index.html (home)
  location / {
    # Useful when HTML references root-relative assets
    add_header X-Served-By copartbr-mirror;

    try_files
      $uri
      $uri/
      /templates/copart$uri.html
      /templates/copart$uri/index.html
      /templates/copart/index.html;
  }

  # --- Optional: proxy fallback for dynamic API endpoints ---
  # If some pages still attempt to call live endpoints that you did not mirror,
  # proxy them to the original host. Add/adjust prefixes as you notice in DevTools.
  location ~ ^/(services|api|rest|graphql|data|v[0-9]+|search|inventory)/ {
    proxy_pass https://www.copart.com.br;
    proxy_set_header Host www.copart.com.br;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_ssl_server_name on;
    proxy_read_timeout 60s;

    # CORS (relax if you need to allow browser requests from your domain to the proxy)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "*, Authorization, Content-Type" always;

    if ($request_method = OPTIONS) {
      return 204;
    }
  }

  # Security headers (baseline)
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN;
  add_header Referrer-Policy no-referrer-when-downgrade;
  add_header X-XSS-Protection "1; mode=block";
}
